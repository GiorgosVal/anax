package org.anax.framework.reporting;import com.google.inject.Injector;import org.anax.framework.model.Suite;import org.anax.framework.model.Test;import org.anax.framework.model.TestMethod;import org.testng.*;import org.testng.internal.annotations.IAnnotationFinder;import org.testng.xml.XmlSuite;import org.uncommons.reportng.HTMLReporter;import java.io.FileNotFoundException;import java.util.Collection;import java.util.List;import java.util.Map;import java.util.Set;public class AnaxReportNGReporter implements AnaxTestReporter {    HTMLReporter htmlReporter = new HTMLReporter();    @Override    public void startOutput(String reportDirectory, String suiteName) throws FileNotFoundException {    }    @Override    public void setSystemOutput(String out) {    }    @Override    public void setSystemError(String out) {    }    @Override    public void startTestSuite(Suite suite) throws ReportException {        ISuite iSuite = new ISuite() {            @Override            public String getName() {                return null;            }            @Override            public Map<String, ISuiteResult> getResults() {                return null;            }            @Override            public IObjectFactory getObjectFactory() {                return null;            }            @Override            public IObjectFactory2 getObjectFactory2() {                return null;            }            @Override            public String getOutputDirectory() {                return null;            }            @Override            public String getParallel() {                return null;            }            @Override            public String getParentModule() {                return null;            }            @Override            public String getGuiceStage() {                return null;            }            @Override            public String getParameter(String s) {                return null;            }            @Override            public Map<String, Collection<ITestNGMethod>> getMethodsByGroups() {                return null;            }            @Override            public Collection<ITestNGMethod> getInvokedMethods() {                return null;            }            @Override            public List<IInvokedMethod> getAllInvokedMethods() {                return null;            }            @Override            public Collection<ITestNGMethod> getExcludedMethods() {                return null;            }            @Override            public void run() {            }            @Override            public String getHost() {                return null;            }            @Override            public SuiteRunState getSuiteState() {                return null;            }            @Override            public IAnnotationFinder getAnnotationFinder() {                return null;            }            @Override            public XmlSuite getXmlSuite() {                return null;            }            @Override            public void addListener(ITestNGListener iTestNGListener) {            }            @Override            public Injector getParentInjector() {                return null;            }            @Override            public void setParentInjector(Injector injector) {            }            @Override            public List<ITestNGMethod> getAllMethods() {                return null;            }            @Override            public Object getAttribute(String s) {                return null;            }            @Override            public void setAttribute(String s, Object o) {            }            @Override            public Set<String> getAttributeNames() {                return null;            }            @Override            public Object removeAttribute(String s) {                return null;            }        };        htmlReporter.onStart(iSuite);    }    @Override    public boolean endTestSuite(Suite suite) throws ReportException {        return false;    }    @Override    public void startTest(Test test, TestMethod testMethod) {    }    @Override    public void endTest(Test test, TestMethod testMethod) {    }    @Override    public void addFailure(Test test, TestMethod method, Throwable t) {            }    @Override    public void addSkipped(Test test, TestMethod method, String skipReason) {    }    @Override    public void addError(Test test, TestMethod method, Throwable t) {    }}